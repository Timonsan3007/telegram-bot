import sys
import os
import requests
from bs4 import BeautifulSoup
from datetime import datetime, timedelta
from config import WEATHER_API_KEY, WEATHER_URL

# –î–æ–±–∞–≤–ª–µ–Ω–∏–µ —Ç–µ–∫—É—â–µ–≥–æ –ø—É—Ç–∏ –¥–ª—è –∫–æ—Ä—Ä–µ–∫—Ç–Ω–æ–≥–æ –∏–º–ø–æ—Ä—Ç–∞
sys.path.append(os.path.abspath(os.path.join(os.path.dirname(__file__), '../../')))

# –°–º–∞–π–ª–∏–∫–∏ –¥–ª—è –ø–æ–≥–æ–¥–Ω—ã—Ö —É—Å–ª–æ–≤–∏–π
WEATHER_ICONS = {
    "—è—Å–Ω–æ": "üåû",
    "–æ–±–ª–∞—á–Ω–æ": "‚òÅÔ∏è",
    "–ø–∞—Å–º—É—Ä–Ω–æ": "üå•Ô∏è",
    "–ø–µ—Ä–µ–º–µ–Ω–Ω–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": "‚õÖ",
    "–æ–±–ª–∞—á–Ω–æ —Å –ø—Ä–æ—è—Å–Ω–µ–Ω–∏—è–º–∏": "üå§Ô∏è",
    "–Ω–µ–±–æ–ª—å—à–∞—è –æ–±–ª–∞—á–Ω–æ—Å—Ç—å": "üå§",
    "–¥–æ–∂–¥—å": "üåßÔ∏è",
    "—Å–Ω–µ–≥": "üå®Ô∏è",
    "–≥—Ä–æ–∑–∞": "üå©Ô∏è",
    "—Ç—É–º–∞–Ω": "üå´Ô∏è",
}

# –°–º–∞–π–ª–∏–∫–∏ –¥–ª—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã
def get_temp_icon(temp):
    return "‚ùÑÔ∏è" if temp < 0 else "‚òÄÔ∏è"

# –°–º–∞–π–ª–∏–∫–∏ –¥–ª—è —Å–∏–ª—ã –≤–µ—Ç—Ä–∞
def get_wind_speed_icon(speed):
    if speed < 1:
        return "üçÉ"
    elif speed < 5:
        return "üå¨Ô∏è"
    elif speed < 10:
        return "üí®"
    else:
        return "üå™Ô∏è"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–µ—Ä–µ–≤–æ–¥–∞ –Ω–∞–ø—Ä–∞–≤–ª–µ–Ω–∏—è –≤–µ—Ç—Ä–∞ –≤ —Å–æ–∫—Ä–∞—â–µ–Ω–Ω—ã–π —Ñ–æ—Ä–º–∞—Ç
def wind_direction_short(deg):
    if 22.5 <= deg < 67.5:
        return "–≤. —Å-–≤ ‚ÜóÔ∏è"  # –°–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —é–≥–æ-–∑–∞–ø–∞–¥
    elif 67.5 <= deg < 112.5:
        return "–≤. –≤ ‚û°Ô∏è"  # –í–æ—Å—Ç–æ—á–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ –∑–∞–ø–∞–¥
    elif 112.5 <= deg < 157.5:
        return "–≤. —é-–≤ ‚ÜòÔ∏è"  # –Æ–≥–æ-–≤–æ—Å—Ç–æ—á–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —Å–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥
    elif 157.5 <= deg < 202.5:
        return "–≤. —é ‚¨áÔ∏è"  # –Æ–∂–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —Å–µ–≤–µ—Ä
    elif 202.5 <= deg < 247.5:
        return "–≤. —é-–∑ ‚ÜôÔ∏è"  # –Æ–≥–æ-–∑–∞–ø–∞–¥–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —Å–µ–≤–µ—Ä–æ-–≤–æ—Å—Ç–æ–∫
    elif 247.5 <= deg < 292.5:
        return "–≤. –∑ ‚¨ÖÔ∏è"  # –ó–∞–ø–∞–¥–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ –≤–æ—Å—Ç–æ–∫
    elif 292.5 <= deg < 337.5:
        return "–≤. —Å-–∑ ‚ÜñÔ∏è"  # –°–µ–≤–µ—Ä–æ-–∑–∞–ø–∞–¥–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —é–≥–æ-–≤–æ—Å—Ç–æ–∫
    else:
        return "–≤. —Å ‚¨ÜÔ∏è"  # –°–µ–≤–µ—Ä–Ω—ã–π –≤–µ—Ç–µ—Ä –¥—É–µ—Ç –Ω–∞ —é–≥

    idx = int((degree + 22.5) // 45) % 8
    return directions[full_directions[idx]]

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –ø—Ä–æ–≥–Ω–æ–∑–∞ –ø–æ–≥–æ–¥—ã
def get_weather_forecast():
    url = f"http://api.openweathermap.org/data/2.5/forecast?q=Volgograd&appid={WEATHER_API_KEY}&units=metric&lang=ru"
    try:
        response = requests.get(url, timeout=10).json()
        forecast_list = response.get('list', [])
        if not forecast_list:
            return "üå§Ô∏è –ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ."

        weather_info = ["*–ü–æ–≥–æ–¥–∞ –≤ –í–æ–ª–≥–æ–≥—Ä–∞–¥–µ:*"]
        today = datetime.now()
        tomorrow = today + timedelta(days=1)

        today_date = f"üìÖ *{today.strftime('%d.%m.%Y')}*"
        tomorrow_date = f"üìÖ *{tomorrow.strftime('%d.%m.%Y')}*"

        today_weather = []
        tomorrow_weather = []

        for forecast in forecast_list:
            forecast_time = datetime.strptime(forecast['dt_txt'], '%Y-%m-%d %H:%M:%S')
            time = forecast_time.strftime("%H:%M")
            temp = round(forecast['main']['temp'])  # –û–∫—Ä—É–≥–ª—è–µ–º —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—É
            desc = forecast['weather'][0]['description']
            wind_speed = round(forecast['wind']['speed'])  # –û–∫—Ä—É–≥–ª—è–µ–º —Å–∫–æ—Ä–æ—Å—Ç—å –≤–µ—Ç—Ä–∞
            wind_deg = forecast['wind']['deg']
            wind_dir = wind_direction_short(wind_deg)
            rain = forecast.get('rain', {}).get('1h', 0)
            snow = forecast.get('snow', {}).get('1h', 0)

            # –õ–æ–≥–∏–∫–∞ —Ñ–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏—è –æ–ø–∏—Å–∞–Ω–∏—è –æ—Å–∞–¥–∫–æ–≤
            if rain > 0:
                precip = f"–¥–æ–∂–¥—å: {rain:.1f} –º–º –∑–∞ —á–∞—Å"
            elif snow > 0:
                precip = f"—Å–Ω–µ–≥: {snow:.1f} –º–º –∑–∞ —á–∞—Å"
            else:
                precip = "–±/–æ"

            # –û–±—Ä–∞–±–æ—Ç–∫–∞ –æ–ø–∏—Å–∞–Ω–∏—è –ø–æ–≥–æ–¥—ã –∏ –≤—ã–±–æ—Ä –∏–∫–æ–Ω–∫–∏
            main_condition = desc.split()[0]  # –ë–µ—Ä–µ–º –ø–µ—Ä–≤–æ–µ —Å–ª–æ–≤–æ –∏–∑ –æ–ø–∏—Å–∞–Ω–∏—è –¥–ª—è –æ–±—â–µ–≥–æ —Å–æ—Å—Ç–æ—è–Ω–∏—è
            icon = WEATHER_ICONS.get(main_condition, 'üå§')  # –ò—â–µ–º –∏–∫–æ–Ω–∫—É –ø–æ –æ–±—â–µ–º—É —Å–æ—Å—Ç–æ—è–Ω–∏—é

            # –§–æ—Ä–º–∏—Ä–æ–≤–∞–Ω–∏–µ —Å—Ç—Ä–æ–∫–∏ –¥–ª—è —Ç–µ–∫—É—â–µ–≥–æ –ø—Ä–æ–≥–Ω–æ–∑–∞
            weather_line = (
                f"{time} {icon} {main_condition.capitalize()[:3]}., "  # –°–æ–∫—Ä–∞—â–µ–Ω–∏–µ —Å–æ—Å—Ç–æ—è–Ω–∏—è
                f"t: {temp}¬∞C {get_temp_icon(temp)}, "
                f"{wind_dir}: {wind_speed} –º/—Å üå¨Ô∏è"
            )

            if forecast_time.date() == today.date():
                today_weather.append(weather_line)
            elif forecast_time.date() == tomorrow.date():
                tomorrow_weather.append(weather_line)

        # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏
        if today_weather:
            weather_info.append(f"{today_date}:\n" + "\n".join(today_weather))
        if tomorrow_weather:
            weather_info.append(f"\n{tomorrow_date}:\n" + "\n".join(tomorrow_weather))

        return "\n".join(weather_info)
    except requests.exceptions.RequestException as e:
        return f"‚ùó –û—à–∏–±–∫–∞ –ø—Ä–∏ –∑–∞–ø—Ä–æ—Å–µ –¥–∞–Ω–Ω—ã—Ö: {e}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏–∏ –æ –≤–æ—Å—Ö–æ–¥–µ –∏ –∑–∞—Ö–æ–¥–µ —Å–æ–ª–Ω—Ü–∞
def get_sun_info(latitude, longitude):
    url = f"https://api.sunrise-sunset.org/json?lat={latitude}&lng={longitude}&formatted=0"
    try:
        response = requests.get(url, timeout=10)
        response.raise_for_status()
        data = response.json()

        if data["status"] != "OK":
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –ø–æ–ª—É—á–∏—Ç—å –¥–∞–Ω–Ω—ã–µ –æ —Å–æ–ª–Ω—Ü–µ."

        # –ò–∑–≤–ª–µ–∫–∞–µ–º –¥–∞–Ω–Ω—ã–µ
        sunrise_utc = datetime.fromisoformat(data["results"]["sunrise"])
        sunset_utc = datetime.fromisoformat(data["results"]["sunset"])
        day_length = data["results"]["day_length"]

        # –ü–µ—Ä–µ–≤–æ–¥ –≤—Ä–µ–º–µ–Ω–∏ –≤ –ª–æ–∫–∞–ª—å–Ω—É—é –∑–æ–Ω—É (UTC+3 –¥–ª—è –í–æ–ª–≥–æ–≥—Ä–∞–¥–∞)
        local_offset = timedelta(hours=3)
        sunrise_local = (sunrise_utc + local_offset).strftime("%H:%M")
        sunset_local = (sunset_utc + local_offset).strftime("%H:%M")
        day_length_str = str(timedelta(seconds=int(day_length)))

        return (
            f"*–í–æ—Å—Ö–æ–¥ –∏ –∑–∞—Ö–æ–¥ —Å–æ–ª–Ω—Ü–∞:*\n"
            f"üåÖ –í–æ—Å—Ö–æ–¥: {sunrise_local}\n"
            f"üåá –ó–∞–∫–∞—Ç: {sunset_local}\n"
            f"‚è≥ –î–æ–ª–≥–æ—Ç–∞ –¥–Ω—è: {day_length_str}"
        )
    except requests.RequestException as e:
        return f"–û—à–∏–±–∫–∞ —Å–æ–µ–¥–∏–Ω–µ–Ω–∏—è: {e}"
    except Exception as e:
        return f"–ù–µ —É–¥–∞–ª–æ—Å—å –æ–±—Ä–∞–±–æ—Ç–∞—Ç—å –¥–∞–Ω–Ω—ã–µ: {e}"

# –§—É–Ω–∫—Ü–∏—è –¥–ª—è –ø–æ–ª—É—á–µ–Ω–∏—è —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä—ã –í–æ–ª–≥–∏
def get_volga_temperature():
    url = "https://seatemperature.ru/current/russia/volga-volgograd-sea-temperature"
    headers = {
        "User-Agent": "Mozilla/5.0 (Windows NT 10.0; Win64; x64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/120.0.0.0 Safari/537.36"
    }

    try:
        response = requests.get(url, headers=headers, timeout=10)
        response.raise_for_status()
        soup = BeautifulSoup(response.text, "html.parser")

        temp_block = soup.find("div", id="temp1")
        if temp_block:
            temperature = temp_block.find("h3").text.strip()
            return f"üåä –¢–µ–º–ø–µ—Ä–∞—Ç—É—Ä–∞ –≤–æ–¥—ã –≤ –í–æ–ª–≥–µ: {temperature}"
        else:
            return "–ù–µ —É–¥–∞–ª–æ—Å—å –Ω–∞–π—Ç–∏ –∏–Ω—Ñ–æ—Ä–º–∞—Ü–∏—é –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –≤–æ–¥—ã."
    except requests.RequestException as e:
        return f"–û—à–∏–±–∫–∞ –ø—Ä–∏ –ø–æ–ª—É—á–µ–Ω–∏–∏ –¥–∞–Ω–Ω—ã—Ö –æ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –≤–æ–¥—ã: {e}"


# –ò—Ç–æ–≥–æ–≤–∞—è —Ñ—É–Ω–∫—Ü–∏—è, –æ–±—ä–µ–¥–∏–Ω—è—é—â–∞—è –¥–∞–Ω–Ω—ã–µ –æ –ø–æ–≥–æ–¥–µ, —Å–æ–ª–Ω—Ü–µ –∏ —Ç–µ–º–ø–µ—Ä–∞—Ç—É—Ä–µ –í–æ–ª–≥–∏
def get_weather_and_sun_info():
    weather = get_weather_forecast()
    sun_info = get_sun_info(latitude=48.7081, longitude=44.5133)  # –ö–æ–æ—Ä–¥–∏–Ω–∞—Ç—ã –í–æ–ª–≥–æ–≥—Ä–∞–¥–∞
    volga_temp = get_volga_temperature()

    # –£–±–∏—Ä–∞–µ–º –ª–∏—à–Ω–∏–µ –ø—É—Å—Ç—ã–µ —Å—Ç—Ä–æ–∫–∏, –¥–æ–±–∞–≤–ª—è–µ–º —Ä–æ–≤–Ω–æ –æ–¥–Ω—É –º–µ–∂–¥—É –±–ª–æ–∫–∞–º–∏
    return f"{weather}\n\n{sun_info}\n\n{volga_temp}"

# –ü—Ä–∏–º–µ—Ä –≤—ã–∑–æ–≤–∞ —Ñ—É–Ω–∫—Ü–∏–π
if __name__ == "__main__":
    print(get_weather_and_sun_info())
